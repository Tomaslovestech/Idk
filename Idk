<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8" />
  <title>Roadtrip Extreme</title>
  <style>
    body { margin: 0; overflow: hidden; }
    #hud {
      position: absolute;
      top: 10px;
      left: 10px;
      font-size: 20px;
      font-family: monospace;
      color: white;
      background: rgba(0, 0, 0, 0.5);
      padding: 8px 12px;
      border-radius: 8px;
    }
    #gameover {
      position: absolute;
      top: 50%; left: 50%;
      transform: translate(-50%, -50%);
      font-size: 36px;
      color: red;
      display: none;
    }
  </style>
</head>
<body>
  <div id="hud">Skóre: <span id="score">0</span></div>
  <div id="gameover">💥 GAME OVER 💥</div>
  <script src="https://cdn.jsdelivr.net/npm/three@0.160.0/build/three.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/three@0.160.0/examples/js/loaders/GLTFLoader.js"></script>
  <script>
    // ZÁKLADNÍ NASTAVENÍ
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

    // OSVĚTLENÍ
    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);
    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
    directionalLight.position.set(0, 10, 10);
    scene.add(ambientLight, directionalLight);

    // AUTO
    let car;
    const loader = new THREE.GLTFLoader();
    loader.load('car.glb', (gltf) => {
      car = gltf.scene;
      car.scale.set(1.5, 1.5, 1.5);
      car.position.set(0, 0.3, 5);
      scene.add(car);
    });

    // KAMERA
    camera.position.set(0, 5, 10);
    camera.lookAt(0, 0, 0);

    // SILNICE
    const roadSegments = [];
    const segmentLength = 20;
    const roadMaterial = new THREE.MeshStandardMaterial({ color: 0x222222 });

    function createRoadSegment(z) {
      const geometry = new THREE.PlaneGeometry(10, segmentLength);
      const mesh = new THREE.Mesh(geometry, roadMaterial);
      mesh.rotation.x = -Math.PI / 2;
      mesh.position.z = z;
      scene.add(mesh);
      roadSegments.push(mesh);
    }

    for (let i = 0; i < 10; i++) {
      createRoadSegment(-i * segmentLength);
    }

    // PŘEKÁŽKY
    const obstacles = [];
    const obstacleGeometry = new THREE.BoxGeometry(1, 1, 1);
    const obstacleMaterial = new THREE.MeshStandardMaterial({ color: 0xffff00 });

    function spawnObstacle() {
      const obs = new THREE.Mesh(obstacleGeometry, obstacleMaterial);
      obs.position.set((Math.random() * 6 - 3), 0.5, -50);
      scene.add(obs);
      obstacles.push(obs);
    }

    setInterval(spawnObstacle, 1500);

    // OVLÁDÁNÍ
    let left = false, right = false;
    document.addEventListener('keydown', e => {
      if (e.code === 'ArrowLeft') left = true;
      if (e.code === 'ArrowRight') right = true;
    });
    document.addEventListener('keyup', e => {
      if (e.code === 'ArrowLeft') left = false;
      if (e.code === 'ArrowRight') right = false;
    });

    // SKÓRE
    let score = 0;
    let gameRunning = true;
    setInterval(() => {
      if (gameRunning) {
        score++;
        document.getElementById("score").textContent = score;
      }
    }, 500);

    // HRA
    function animate() {
      if (!gameRunning) return;
      requestAnimationFrame(animate);

      // Pohyb auta
      if (car) {
        if (left) car.position.x -= 0.2;
        if (right) car.position.x += 0.2;
      }

      // Pohyb překážek
      obstacles.forEach((obs, i) => {
        obs.position.z += 0.5;
        if (car && obs.position.distanceTo(car.position) < 1.2) {
          document.getElementById("gameover").style.display = "block";
          gameRunning = false;
        }
      });

      // Nekonečná silnice
      roadSegments.forEach(segment => {
        segment.position.z += 0.5;
        if (segment.position.z > 10) {
          segment.position.z -= segmentLength * roadSegments.length;
        }
      });

      renderer.render(scene, camera);
    }

    animate();
  </script>
</body>
</html>
